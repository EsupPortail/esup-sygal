<?php

namespace Structure;

use Structure\Controller\SubstitutionController;
use Structure\Entity\Db\Structure;
use Structure\Entity\Db\StructureConcreteInterface;
use Structure\Entity\Db\TypeStructure;
use Structure\Provider\Privilege\SubstitutionPrivileges;
use Application\View\Renderer\PhpRenderer;

/**
 * @var PhpRenderer $this
 * @var string $identifiant
 * @var Structure $cible
 * @var StructureConcreteInterface[] $structuresConcretesSubstituees
 * @var array[] $structuresConcretes
 * @var TypeStructure $type
 * @var string $structureCibleLogoContent
 * @var string $structuresConcretesSubstitueesLogosContents
 *
 * @see SubstitutionController::creerAction()
 * @see SubstitutionController::modifierAction()
 */


if ($type === null && $cible !== null) $type = $cible->getTypeStructure()->getCode();
$canEdit = $this->isAllowed(SubstitutionPrivileges::getResourceId(SubstitutionPrivileges::SUBSTITUTION_MODIFICATION_TOUTES_STRUCTURES))
or $this->isAllowed(SubstitutionPrivileges::getResourceId(SubstitutionPrivileges::SUBSTITUTION_MODIFICATION_SA_STRUCTURE));
?>

<h1>Saisie d'une substitution de structure</h1>

<?php
$messenger = $this->messenger();
echo $messenger->addMessagesFromFlashMessenger();
?>

<p>
    <a href="<?php echo $this->url('substitution-index', [], [], null); ?>" class="">
        < Retour à l'index des substitutions
    </a>
</p>

<form action="<?php echo ($cible->getId()) ? $this->url('substitution-modifier', ['cible' => $cible->getId()], [], true) : $this->url('substitution-creer', ['type' => $type], [], true); ?>"
      method="POST">
    <input type="hidden" name="type" id="type" value="<?php echo $type; ?>">
    <input type="hidden" name="identifiant" id="identifiant" value="<?php echo $identifiant; ?>">

    <div class="row">
        <div class="col-md-6">
            <div class="card box">
                <div class="card-header bg-dark text-light">
                    <h2>Structures à substituer (sources)</h2>
                </div>
                <div id="sources" class="card-body">
                    <?php if ($canEdit): ?>
                        <p>
                            <?php echo generateSelect($structuresConcretes, $this); ?>
                            <button id="btn-ajouter-struct" type="button" name="ajouter" class="btn btn-secondary btn-sm">
                                <span class='icon icon-plus'></span> Ajouter la structure sélectionnée
                            </button>
                        </p>
                    <?php endif; ?>

                    <?php
                    foreach ($structuresConcretesSubstituees as $i => $source) {
                        echo $this->structureSubstitHelper()->structureSource($source, $structuresConcretesSubstitueesLogosContents[$i]);
                    }
                    ?>
                </div>
            </div>
        </div>
        <div id="cible" class="col-md-6">
            <div class="card box">
                <div class="card-header bg-dark text-light">
                    <h2>Structure substituante (cible)</h2>
                </div>
                <div class="card-body">
                    <?php echo $this->structureSubstitHelper()->structureCible($cible, $structureCibleLogoContent); ?>
                </div>
            </div>

            <?php if ($canEdit): ?>
                <p>
                    <input type="submit" class="btn btn-lg btn-primary" value="Enregistrer cette substitution"/>
                </p>
            <?php endif; ?>
        </div>
    </div>

</form>

<?php

/**
 * @param array[] $structuresConcretes
 * @param \Laminas\View\Renderer\PhpRenderer $renderer
 * @return string
 */
function generateSelect(array $structuresConcretes, \Laminas\View\Renderer\PhpRenderer $renderer): string
{
    $texte = "<select name='nouveau' class='selectpicker' data-bs-html='true' data-live-search='true'>";
    $texte .= "<option value=''>(Sélectionnez la structure à ajouter)</option>";
    foreach ($structuresConcretes as $structuresConcrete) {
        $url = $renderer->url('substitution-generer', ['id' => $structuresConcrete['structure']['id']]);
        $disabled = isset($structuresConcrete['structure']['structureSubstituante'][0]) ? 'disabled' : '';
        $texte .= "<option data-struct-id='" . $structuresConcrete['id'] . "' value='" . $url . "' $disabled>" . $structuresConcrete['structure']['libelle'] . "</option>";
    }
    $texte .= "</select>";
    return $texte;
}

?>


<style>
    div.etablissement {
        margin: 5px;
        padding: 5px;
        border: 2px gray solid;
        border-radius: 5px;
        height: 150px;
    }
</style>


<script>
    $(document).ready(function () {
        var select = $("select[name='nouveau']");
        select.selectpicker().on('change', function () {
            $('#btn-ajouter-struct').prop('disabled', '' === $(this).selectpicker('val'));
        }).change();


        //remplacement dans la structure cible
        $("div#sources").on("click", "input[type='radio']", function () {
            var type = $(this).attr('name');

            // var texte = ($(this).parent().find(".texte").text());
            var texte = ($(this).parent().parent().children(":last-child").text());
            if (type === 'logo') {
                texte = ($(this).parent().find(".path").val());
                var src = ($(this).parent().find(".current").attr("src"));
                $('#logo_tmp').attr("src", src);
            }
            $('input#' + type).val(texte);
        })
            //suppression d'une structure
            .on("click", "button.supprimer", function () {
                var panel = $(this).parent().parent().parent();
                var id = panel.data("struct-id");
                panel.remove();
                //remise de l'option
                select.find("option[data-struct-id=" + id + "]").prop('disabled', false);
                select.selectpicker('destroy');
                select.selectpicker().change();
            });

        //ajout d'une structure
        $("button[name='ajouter']").on("click", function () {
            var url = select.selectpicker('val');
            if (!url) return;
            $.get(url, function (data) {
                $("div#sources").append(data);
                var option = select.find("option:selected");
                select.selectpicker('val', '');
                option.prop('disabled', true);
                select.selectpicker('destroy');
                select.selectpicker().change();
            });
        });
    });
</script>