<?php

use Application\Controller\PrivilegeController;
use Application\Entity\Db\Role;
use Application\View\Renderer\PhpRenderer;

/**
 * @var PhpRenderer $this
 * @var string      $text
 * @var Role[]      $rolesForFilter
 * @var \UnicaenPrivilege\Entity\Db\PrivilegeCategorie[] $categoriesPrivilegesForFilter
 */

/**
 * @param string $paramName
 * @param string $paramValue
 * @param array  $queryParams
 * @return string
 */
$that = $this;
$urlFiltrer = function ($paramName, $paramValue, $queryParams) use ($that) {
    $queryParams[$paramName] = $paramValue;

    return $that->url('gestion-privilege', [], ['query' => $queryParams], true);
};

echo $this->filterPanel([
    $this->translate("Périmètre") => [
        'paramName'   => 'depend',
        'paramConfig' => [
            ['value' => '', 'label' => $this->translate("(Peu importe)")],
            ['value' => $v = PrivilegeController::PERIMETRE_Aucun, 'label' => $this->translate("Sans périmètre")],
            ['value' => $v = PrivilegeController::PERIMETRE_ED, 'label' => $this->translate("École doctorale")],
            ['value' => $v = PrivilegeController::PERIMETRE_UR, 'label' => $this->translate("Unité de recherche")],
            ['value' => $v = PrivilegeController::PERIMETRE_Etab, 'label' => $this->translate("Établissement")],
            ['value' => $v = PrivilegeController::PERIMETRE_These, 'label' => $this->translate("Thèse")],

        ],
        'filterUrl'   => $urlFiltrer,
        'titre'       => "Filtrage en fonction du périmètre du rôle",
    ],
]);

$values = [
    ['value' => '', 'label' => $this->translate("(Peu importe)")],
];
foreach ($categoriesPrivilegesForFilter as $categorie) {
    $values[$categorie->getCode()] = [
        'value' => $categorie->getCode(),
        'label' => $this->translate($categorie->getLibelle()),
    ];
}
echo $this->filterPanel([
    $this->translate("Catégorie") => [
        'paramName'   => 'categorie',
        'paramConfig' => $values,
        'filterUrl'   => $urlFiltrer,
        'titre'       => "Filtrage en fonction de la catégorie du priviliège",
    ],
]);

$values = [
    ['value' => '', 'label' => $this->translate("(Tous)")],
];
foreach ($rolesForFilter as $role) {
    $values[$role->getLibelle()] = [
        'value' => $role->getLibelle(),
        'label' => $this->translate($role->getLibelle()),
    ];
}

echo $this->filterPanel([
    $this->translate("Rôle") => [
        'paramName'   => 'role',
        'paramConfig' => $values,
        'filterUrl'   => $urlFiltrer,
        'titre'       => "Filtrage par rôle",
    ],
]);


