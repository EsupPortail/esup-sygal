<?php

use Application\View\Renderer\PhpRenderer;
use Application\Entity\Db\These;
use Application\Entity\Db\EcoleDoctorale;
use Application\Entity\Db\UniteRecherche;
use Application\Entity\Db\Etablissement;
use Application\Entity\Db\Structure;

/**
 * @see \Application\Controller\StatistiqueController::indexAction()
 * @var PhpRenderer $this
 * @var These[]     $theses
 * @var EcoleDoctorale[]     $ecoles
 * @var UniteRecherche[]     $unites
 * @var Etablissement[] $etablissements
 *
 * @var string $type
 * @var Structure $structure
 */


$this->headTitle($this->translate("Statistiques"));

?>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<h1 class="page-header first"><?php echo $this->translate("Statistiques") ?> <span
            class="badge bg-secondary"><?php echo count($theses) . " thèses"?></span></h1>

<?php if ($type !== null) : ?>
 Sélection courante : [<?php echo $type; ?>] <?php echo ($structure)?$structure->getLibelle():"Pas de structure"; ?>
<?php else : ?>
    Aucune sélection
<?php endif; ?>

    <div id="selector">
        <form id="selection" method="get" action="">
            <h4>Type de structure : </h4>
            <input type="radio" name="structure_type" value="Aucun">  Aucune <br/>
            <input type="radio" name="structure_type" value="ETAB">   Établissement <br/>
            <input type="radio" name="structure_type" value="ED">     École doctorale <br/>
            <input type="radio" name="structure_type" value="UR">     Unité de recherche

            <h4>Libellé de la structure :</h4>
            <select style='width: 400px; max-width:400px;' name='structure_id' id='structure_id'> </select>

            <br/>
            <input type="submit" value="Filter">
        </form>
    </div>

<hr/>



<style>
    div#selector {
        border-radius: 0px;
        border-left:solid gray 2px;
        background-color: whitesmoke;
        padding: 5px;
        margin: 10px;
        width:800px;
    }
</style>

<script>
    $(document).ready(function() {
        $("input[type='radio']").on("change", function() {
            $('select#structure_id').find('option').remove();

            switch($(this).attr("value")) {
                case "ETAB" :
                    //null option
                    $("select#structure_id").append(new Option(("Selectionner un établissement ... "), null, false, true));
                    <?php foreach ($etablissements as $structureConcrete) : ?>
                        $("select#structure_id").append(new Option(<?php echo '"'.$structureConcrete->getLibelle().'"'; ?> , <?php echo $structureConcrete->getId(); ?>, false, false));
                    <?php endforeach; ?>
                    break;
                case "ED" :
                    //null option
                    $("select#structure_id").append(new Option(("Selectionner une école doctorale ... "), null, false, true));
                    <?php foreach ($ecoles as $structureConcrete) : ?>
                        $("select#structure_id").append(new Option(<?php echo '"'.$structureConcrete->getLibelle().'"'; ?> , <?php echo $structureConcrete->getId(); ?>, false, false));
                    <?php endforeach; ?>
                    break;
                case "UR" :
                    //null option
                    $("select#structure_id").append(new Option(("Selectionner une unité de recherche ... "), null, false, true));
                    <?php foreach ($unites as $structureConcrete) : ?>
                        $("select#structure_id").append(new Option(<?php echo '"'.$structureConcrete->getLibelle().'"'; ?> , <?php echo $structureConcrete->getId(); ?>, false, false));
                    <?php endforeach; ?>
                    break;
            }
        });

    });
</script>

<?php
$validInscriptionTheses = [];
$validSoutenanceTheses = [];
foreach($theses as $these) {
    if ($these->getDatePremiereInscription() !== null) $validInscriptionTheses[] = $these;
    if ($these->getDateSoutenance() !== null) $validSoutenanceTheses[] = $these;
}

usort($validInscriptionTheses, function (These $a, These $b) {return $a->getDatePremiereInscription() > $b->getDatePremiereInscription();});
usort($validSoutenanceTheses, function (These $a, These $b) {return $a->getDateSoutenance() > $b->getDateSoutenance();});

$end = (new DateTime())->format("Y");
$start = $end - 20;

$effectifsInscription = [];
$effectifsSoutenance = [];

$dateMinimum = 2018;
$dateMaximum = 2018;

if (! empty($validInscriptionTheses)) {
    $dateMinimum = min( $validInscriptionTheses[0]->getDatePremiereInscription()->format("Y"),
        $validSoutenanceTheses[0]->getDateSoutenance()->format("Y")
    );
    $dateMaximum = max( end($validInscriptionTheses)->getDatePremiereInscription()->format("Y"),
        end($validSoutenanceTheses)->getDateSoutenance()->format("Y")
    );
}


for ($annee = $dateMinimum; $annee <= $dateMaximum ; $annee++) {
    $effectifsInscription[$annee] = array();
    $effectifsSoutenance[$annee] = array();
}

/** @var These $these */
foreach ($theses as $these) {
    if ($these->getDatePremiereInscription()) array_push($effectifsInscription[$these->getDatePremiereInscription()->format("Y")], $these);
    if ($these->getDateSoutenance()) array_push($effectifsSoutenance[$these->getDateSoutenance()->format("Y")], $these);
}


$data_insc_sout = [];
for($current = $start ; $current <= $end ; $current++) {
    $inscriptions = (empty($effectifsInscription[$current])) ? 0 : count($effectifsInscription[$current]);
    $soutenances = (empty($effectifsSoutenance[$current])) ? 0 : count($effectifsSoutenance[$current]);

    $data_insc_sout[] = [$current , $inscriptions, $soutenances];
}

$dureeTheses = [];
for ($annee = $dateMinimum; $annee <= $dateMaximum ; $annee++) {
    $dureeTheses[$annee] = array();
}
for ($annee = $dateMinimum; $annee <= $dateMaximum ; $annee++) {
    foreach($effectifsSoutenance[$annee] as $these) {
        if ($these->getDatePremiereInscription()) {
            $duree = $these->getDateSoutenance()->diff($these->getDatePremiereInscription());
            $dureeTheses[$annee][] = $duree->m + $duree->y*12;
        }
    }
    sort($dureeTheses[$annee]);
}
$google_data = [];
for ($annee = $start; $annee <= $end ; $annee++) {
    if (! empty($dureeTheses[$annee])) {
        $nb = count($dureeTheses[$annee]);
        $position_q0 = $nb*0.00;
        $position_q1 = $nb*0.25;
        $position_q2 = $nb*0.50;
        $position_q3 = $nb*0.75;
        $position_q4 = $nb*1.00-1;

        $row = [ $annee];
        foreach ($dureeTheses[$annee] as $data) {
            $row[] = $dureeTheses[$annee][$position_q0];
            $row[] = $dureeTheses[$annee][$position_q1];
            $row[] = $dureeTheses[$annee][$position_q3];
            $row[] = $dureeTheses[$annee][$position_q4];
        }
        $google_data[] = $row;
    }
}

$homme = 0;
$femme = 0;
$discipline = [];
$discipline["Autres"] = 0;
$threshold = 5;


$parite = [
        'homme' => [],
        'femme' => [],
];

for ($annee = 1999 ; $annee <= 2019 ; $annee++) {
    $parite['homme'][$annee] = 0;
    $parite['femme'][$annee] = 0;
}

//foreach($effectifsInscription[$position_annee] as $these) {
foreach($theses as $these) {
    if ($these->getDoctorant()->getIndividu()->estUneFemme()) {
        $femme++;
        if ($these->getDatePremiereInscription()) $parite['femme'][$these->getDatePremiereInscription()->format("Y")] ++ ;
    } else {
        $homme++;
        if ($these->getDatePremiereInscription()) $parite['homme'][$these->getDatePremiereInscription()->format("Y")] ++ ;
    }
    if ($these->getUniteRecherche()) {
        $domaines = $these->getUniteRecherche()->getDomaines();
        if ($domaines) {
            foreach ($domaines as $domaine) {
                $discipline[$domaine->getLibelle()]++;
            }
        }
    }
}

$effectifParPays = generateEffectifParPays($effectifsInscription, $start, $end);
?>

<script> var do_drawing = true; </script>

<script type="text/javascript">
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Année', '#Inscriptions', '#Soutenances'],
            <?php
            foreach($data_insc_sout as $row) {
                echo "[\"" . $row[0] .  "\"," . $row[1] . "," . $row[2] . "],";
            }
            ?>
        ]);

        var options = {
            curveType: 'function',
            legend: { position: 'bottom' },
            pointSize: 5,
            hAxis: {
                slantedText:true,
                slantedTextAngle:45,
                //viewWindow: {
                //min: 5,
                //max: 2015
                //}
            },
            vAxis: {
                minValue: 0,
                viewWindow: {
                    min: 0
                }
            }
        };

        if (do_drawing) {
            var chart = new google.visualization.LineChart(document.getElementById('Inscriptions/Soutenances'));
            chart.draw(data, options);
        }
    }
</script>
<div class="box card">
    <div class="card-header bg-info">
        <h2 class="first">
            Évolution du nombre d'inscriptions en thèses et du nombre de soutenances
        </h2>
    </div>
    <div id="Inscriptions/Soutenances" style="width: 925px; height: 500px"></div>
</div>

<script type="text/javascript">
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            <?php
            foreach($google_data as $row) {
                echo "[\"" . $row[0] .  "\"," . $row[1] . "," . $row[2] . "," . $row[3] . "," . $row[4]. "],";
            }
            ?>
        ], true);

        var options = {
            curveType: 'function',
            legend: 'none',
            pointSize: 5,
            hAxis: {
                slantedText:true,
                slantedTextAngle:45
            },
            vAxis: {
                title: 'Durée en mois'
            }
        };

        if (do_drawing) {
            var chart = new google.visualization.CandlestickChart(document.getElementById('duree'));
            chart.draw(data, options);
        }
    }
</script>
<div class="box card">
    <div class="card-header bg-info">
        <h2 class="first">
            Évolution de la durée des thèses
        </h2>
    </div>
    <div id="duree" style="width: 925px; height: 500px;"></div>
</div>

<script type="text/javascript">
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        var data = google.visualization.arrayToDataTable([
            ['Genre', 'Effectif'],
            ['Homme',     <?php echo $homme; ?>],
            ['Femme',     <?php echo $femme; ?>]

        ]);

        var options = {
            title: 'Répartition en fonction du genre',
            pieSliceText: 'label',
            legend: 'none',

        };

        if (do_drawing) {
            var chart = new google.visualization.PieChart(document.getElementById('Repartition/Sexe'));
            chart.draw(data, options);
        }
    }
</script>
<script type="text/javascript">
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        var data = google.visualization.arrayToDataTable([
            ['Discipline', 'Effectif'],

            <?php
            foreach ($discipline as $nom => $effectif) {
                if ($effectif >= $threshold) echo "[\"".$nom ."\",".$effectif."],";
                else $discipline["Autres"] += $effectif;
            }
            echo "[\"Autres\",". $discipline["Autres"]."],"
            ?>
        ]);

        var options = {
            title: 'Répartition en fonction des domaines scientifiques',
            legend: 'none',
        };

        if (do_drawing) {
            var chart = new google.visualization.PieChart(document.getElementById('Repartition/Discipline'));
            chart.draw(data, options);
        }
    }
</script>
<div class="box card" style="height: 550px;">
    <div class="card-header bg-info">
        <h2 class="first">
            Répartition des inscriptions entre <?php echo $start; ?> et <?php echo $end; ?>
        </h2>
    </div>
    <div id="Repartition/Discipline" style="width: 420px; height: 500px; float:left;"></div>
    <div id="Repartition/Sexe" style="width: 420px; height: 500px; float:left;"></div>

</div>

<div class="box card" style="height: 550px;">
    <div class="card-header bg-info">
    <h2> Statistiques sur la parité </h2>
    </div>

    <div id="parite_cumul" class="col-md-6"></div>
    <div id="parite_area"  class="col-md-6"></div>

</div>

<script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            let data = google.visualization.arrayToDataTable([
                ['Année', 'Homme', 'Femme'],
                <?php
                for ($i = $start; $i <= $end; $i++) {
                    echo "[\"" . (((int) $i)) . "\"," . $parite['homme'][((int)  $i)] . "," . $parite['femme'][((int)  $i)] . "],";
                }
                ?>
            ]);
            //console.log(data);

            let options_fullStacked = {
                title: 'Pourcentage d\'inscription en premère année de thèse en fonction du genre du doctorant' ,
                isStacked: 'relative',
                height: 400,
                legend: { position: 'bottom' },
                vAxis: {
                    minValue: 0,
                    ticks: [0, .25, .50, .75, 1]
                },
                hAxis: {
                    slantedText:true,
                    slantedTextAngle:45
                },
                series: {
                    0: { color: '#adcde2' },
                    1: { color: '#ff93dd'},
                }
            };

            let options_stacked = {
                title: 'Nombre d\'inscription en premère année de thèse en fonction du genre du doctorant' ,
                isStacked: 'false',
                height: 400,
                legend: { position: 'bottom' },
                vAxis: {
                    minValue: 0,
                },
                hAxis: {
                    slantedText:true,
                    slantedTextAngle:45,

                },
                series: {
                    0: { color: '#adcde2' },
                    1: { color: '#ff93dd'},
                }
            };
            var chart = new google.visualization.AreaChart(document.getElementById('parite_area'));
            chart.draw(data, options_fullStacked);

            var chart = new google.visualization.AreaChart(document.getElementById('parite_cumul'));
            chart.draw(data, options_stacked);
        }
    </script>



<script type="text/javascript">
    google.charts.load('current', {
        'packages':['geochart'],
        'mapsApiKey': 'AIzaSyAZPWFm-VDkkiToc-s7Z982XQ6b6bDp428'
    });
    google.charts.setOnLoadCallback(drawRegionsMap);

    function drawRegionsMap() {
        var data = google.visualization.arrayToDataTable([
            ['Country', 'Popularity'],
            <?php foreach($effectifParPays as $country => $number) {
            echo "[ '{$country}' , $number ],";
        }?>
        ]);
        var options = {
            colorAxis: { maxValue: 100 }
        };

        if (do_drawing) {
            var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));
            chart.draw(data, options);
        }
    }
</script>
<div class="box card" style="height: 550px;">
    <div class="card-header bg-info">
        <h2 class="first">
            Provenance des doctorants inscrits entre <?php echo $start; ?> et <?php echo $end; ?>
        </h2>
    </div>
    <div id="regions_div" style="width: 900px; height: 500px;"></div>
</div>

<?php
function generateEffectifParPays($effectifsInscription, $start , $end) {
    $code = [];
    $code["AFGHAN(E)"] = "Afghanistan";
    $code["ALGERIEN(NE)"] = "Algeria";
    $code["ALGÉRIEN(NE)"] = "Algeria";
    $code["ALLEMAND(E)"] = "Germany";
    $code["AMERICAIN(E)"] = "United States";
    $code["ANDORRAN(NE)"] = "Andorra";
    $code["ANGOLAIS(E)"] = "Angola";
    $code["APATRIDE"] = "";
    $code["ARGENTIN(E)"] = "Argentina";
    $code["ARMENIEN(E)"] = "Armenia";
    $code["AZERI(E)"] = "Azerbaijan";
    $code["AUSTRALIEN(NE)"] = "Australia";
    $code["AUTRICHIEN(NE)"] = "Austria";
    $code["BIELORUSSE"] = "Belarus";
    $code["BIRMAN(E)"] = "Myanmar";
    $code["BELGE"] = "Belgium";
    $code["BENGALI(E)"] = "Bengladesh";
    $code["BENINOIS(E)"] = "Benin";
    $code["BÉNINOIS(E)"] = "Benin";
    $code["BOLIVIEN(NE)"] = "Bolivia";
    $code["BOSNIAQUE"] = "Bosnia";
    $code["BRESILIEN(NE)"] = "Brazil";
    $code["BRÉSILIEN(NE)"] = "Brazil";
    $code["BRITANNIQUE"] = "United Kingdom";
    $code["BULGARE"] = "Bulgaria";
    $code["BURKINABE"] = "Burkina Faso";
    $code["BURKINABEEN(NE)"] = "Burkina Faso";
    $code["BURUNDAIS(E)"] = "Burundi";
    $code["CAMBODGIEN(NE)"] = "Combodia";
    $code["CAMEROUNAIS(E)"] = "Cameroon";
    $code["CANADIEN(NE)"] = "Canada";
    $code["CAP VERDIEN(NE)"] = "Cabo Verde";
    $code["CENTRAFRICAIN(E)"] = "Central African Republic";
    $code["CHILIEN(NE)"] = "Chile";
    $code["CHINOIS(E)"] = "China";
    $code["CHINOIS(E) TAIWAN"] = "Taiwan";
    $code["COLOMBIEN(NE)"] = "Colombia";
    $code["COMORIEN(NE)"] = "Comoros";
    $code["CONGOLAIS(E)"] = "Congo";
    $code["COSTARICIEN(NE)"] = "Costa Rica";
    $code["COSTARICAIN(E)"] = "Costa Rica";
    $code["CROATE"] = "Croatia";
    $code["CUBAIN(E)"] = "Cuba";
    $code["DANOIS(E)"] = "Denmark";
    $code["DJIBOUTIEN(NE)"] = "Djibouti";
    $code["DOMINICAIN(E)"] = "Dominican Republic";
    $code["EGYPTIEN(NE)"] = "Egypt";
    $code["EL SALVADOR"] = "El Salvador";
    $code["EL SALVADORIEN(NE)"] = "El Salvador";
    $code["EMIRATIS(IE)"] = "United Arab Emirates";
    $code["EQUATORIEN(NE)"] = "Equatorial Guinea";
    $code["ESPAGNOL(E)"] = "Spain";
    $code["ETRANGER"] = "";
    $code["FINLANDAIS(E)"] = "Finland";
    $code["FRANCAIS(E)"] = "France";
    $code["FRANÇAIS(E)"] = "France";
    $code["GABONAIS(E)"] = "Gabon";
    $code["GEORGIEN(NE)"] = "Georgia";
    $code["GHANEEN(NE)"] = "Ghana";
    $code["GREC(QUE)"] = "Greece";
    $code["GUATEMALTEQUE"] = "Guatemala";
    $code["GUINEEN(NE)"] = "French Guiana";
    $code["HAITIEN(NE)"] = "Haiti";
    $code["HONGROIS(E)"] = "Hungary";
    $code["INDIEN(NE)"] = "India";
    $code["INDONESIEN(NE)"] = "Indonesia";
    $code["INDONÉSIEN(NE)"] = "Indonesia";
    $code["IRAKIEN(NE)"] = "Iraq";
    $code["IRANIEN(NE)"] = "Iran";
    $code["IRLANDAIS(E)"] = "Ireland";
    $code["ISRAELIEN(NE)"] = "Israel";
    $code["ITALIEN(NE)"] = "Italia";
    $code["IVOIRIEN(NE)"] = "CI"; //----------------------------------
    $code["JAMAICAIN(E)"] = "Jamaica";
    $code["JAPONAIS(E)"] = "Japan";
    $code["JORDANIEN(NE)"] = "Jordan";
    $code["KAZAKH"] = "Kazakhstan";
    $code["KAZAKH(E)"] = "Kazakhstan";
    $code["KENYAN(NE)"] = "Kenya";
    $code["KOWEITIEN(NE)"] = "Kuwait";
    $code["LAOTIEN(NE)"] = "Laos";
    $code["LETTONIEN(NE)"] = "Latvia";
    $code["LIBANAIS(E)"] = "Lebanon";
    $code["LIBYEN(NE)"] = "Libya";
    $code["LITHUANIEN(NE)"] = "Lithuania";
    $code["LUXEMBOURGEOIS(E)"] = "Luxembourg";
    $code["MALAIS(E)"] = "Malaysia";
    $code["MALAISIEN(E)"] = "Malaysia";
    $code["MALAISIEN(NE)"] = "Malaysia";
    $code["MALAWIEN(NE)"] = "Malawi";
    $code["MALGACHE"] = "Madagascar";
    $code["MALIEN(NE)"] = "Mali";
    $code["MALTAIS(E)"] = "Malta";
    $code["MAROCAIN(E)"] = "Maroco";
    $code["MAURICIEN(NE)"] = "Mauritius";
    $code["MAURITANIEN(NE)"] = "Mauritania";
    $code["MEXICAIN(E)"] = "Mexico";
    $code["MONEGASQUE"] = "Monaco";
    $code["MONGOL(E)"] = "Mongolia";
    $code["MOLDAVE"] = "Moldova";
    $code["MOZAMBIQUOIS(E)"] = "Mozambique";
    $code["NEERLANDAIS(E)"] = "Netherlands";
    $code["NEPALAIS(E)"] = "Nepal";
    $code["NICARAGUAIS(E)"] = "Nicaragua";
    $code["NIGERIEN(NE)"] = "Nigeria";
    $code["NIGERIAN(E)"] = "Nigeria";
    $code["NIGÉRIEN(NE)"] = "Nigeria";
    $code["NORVEGIEN(NE)"] = "Norway";
    $code["OUGANDAIS(E)"] = "Uganda";
    $code["PAKISTANAIS(E)"] = "Pakistan";
    $code["PALESTINIEN(NE)"] = "Palestine";
    $code["PANAMEEN(NE)"] = "Panama";
    $code["PARAGUAYEN(NE)"] = "Paraguay";
    $code["PERUVIEN(NE)"] = "Peru";
    $code["PHILIPPIN(NE)"] = "Philippines";
    $code["POLONAIS(E)"] = "Poland";
    $code["PORTUGAIS(E)"] = "Portugal";
    $code["ROUMAIN(E)"] = "Romania";
    $code["RUANDAIS(E)"] = "Rwanda";
    $code["RWANDAIS(E)"] = "Rwanda";
    $code["RUSSE"] = "Russia";
    $code["SAOUDIEN(NE)"] = "Saudi Arabia";
    $code["SENEGALAIS(E)"] = "Senegal";
    $code["SÉNÉGALAIS(E)"] = "Senegal";
    $code["SALVADORIEN(NE)"] = "El Salvador";
    $code["SERBE"] = "Serbia";
    $code["SLOVAQUE"] = "Slovakia";
    $code["SOUDANAIS(E)"] = "Sudan";
    $code["SRI LANKAIS(E)"] = "Sri Lanka";
    $code["SUD COREEN(NE)"] = "Korea, Republic of";
    $code["SUEDOIS(E)"] = "Sweden";
    $code["SUISSE"] = "Switzerland";
    $code["SYRIEN(NE)"] = "Syrian Arab Republic";
    $code["TCHADIEN(NE)"] = "Chad";
    $code["TCHEQUE"] = "Czechia";
    $code["THAILANDAIS(E)"] = "Thailand";
    $code["THAÏLANDAIS(E)"] = "Thailand";
    $code["TOGOLAIS(E)"] = "Togo";
    $code["TUNISIEN(NE)"] = "Tunisia";
    $code["TURC (TURQUE)"] = "Turkey";
    $code["TURC(QUE)"] = "Turkey";
    $code["UKRAINIEN(NE)"] = "Ukraine";
    $code["EMIRATS ARABES UNIS"] = "United Arab Emirates";
    $code["VENEZUELIEN(NE)"] = "Venezuela";
    $code["VIETNAMIEN(NE)"] = " 	Viet Nam";
    $code["YEMENITE"] = "Yemen";
    $code["YOUGOSLAVE"] = "";
    $code["ZAIROIS(E)"] = "Zaire";


    $effectifParPays = [];
    $nope = 0;
    for ($annee = $start ; $annee <= $end ; $annee++ ) {
        if (!empty($effectifsInscription[$annee])) {
            foreach ($effectifsInscription[$annee] as $these) {
                $nationalite = $these->getDoctorant()->getIndividu()->getNationalite();
                if (isset($code[$nationalite])) {
                    $effectifParPays[$code[$nationalite]]++;
                } else {
                    echo $nationalite . " ";
                    $nope++;
                }
            }
        }
    }
    if ($nope > 0) echo $nope;
    return $effectifParPays;
}
?>

<style>
    div.selector  {
        border: 2px gray solid;
        background-color: whitesmoke;
        border-radius: 5px;
    }
</style>
