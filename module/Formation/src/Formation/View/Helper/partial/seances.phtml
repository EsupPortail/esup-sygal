<?php

use Formation\Entity\Db\Seance;
use Formation\Entity\Db\Session;

/**
 * @see \Formation\View\Helper\EtatViewHelper
 * @var Session $session
 * @var string $ordre
 * @var array $options
 */


/** @var Seance[] $seances */
$seances = $session->getSeances()->toArray();
$seances = array_filter($seances, function (Seance $a) { return $a->estNonHistorise();});
if($ordre === 'ASC'){
    usort($seances, function (Seance $a, Seance $b) { return $a->getDebut() > $b->getDebut();});
}else{
    usort($seances, function (Seance $a, Seance $b) { return $a->getDebut() <= $b->getDebut();});
}
$nbSeances = count($seances);

?>

<?php echo $nbSeances; ?> séance<?php if ($nbSeances > 1) echo "s"; ?>
 -
<?php echo $session->getDuree(); ?> h.
<ul>
    <?php foreach ($seances as $seance) :
        $class = "seance-non-passee";
        if($dateFin = $seance->getFin()){
            $aujourdhui = new DateTime();
            $dateFinObj = $dateFin;
            $class= $dateFinObj < $aujourdhui ? "seance-passee" : $class;
        }
        if($class === "seance-non-passee"): ?>
            <li class=<?=$class?>>
        <?php else: ?>
            <li class=<?=$class?> data-bs-toggle="tooltip" title="Séance passée">
        <?php endif; ?>
        <?php echo $seance->getDebut()->format("d/m/Y"); ?>
        <?php echo $seance->getDebut()->format("H:i"); ?>
        &rightarrow;
        <?php echo $seance->getFin()->format("H:i"); ?>
    </li>
    <?php endforeach; ?>
</ul>

<style>
    .seance-passee {
        color: gray; /* Changer la couleur du texte */
        text-decoration: line-through; /* Barrer le texte pour indiquer qu'il est passé */
        opacity: 0.7; /* Rendre l'élément un peu transparent */
    }
</style>

