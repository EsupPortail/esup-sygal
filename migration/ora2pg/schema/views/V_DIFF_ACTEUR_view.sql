-- Generated by Ora2Pg, the Oracle database Schema converter, version 20.0
-- Copyright 2000-2019 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=sygaldb.unicaen.fr;sid=SYGLPROD;port=1523

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE OR REPLACE VIEW v_diff_acteur (source_code, source_id, operation, u_individu_id, u_these_id, u_role_id, u_acteur_etablissement_id, u_qualite, u_lib_role_compl, s_individu_id, s_these_id, s_role_id, s_acteur_etablissement_id, s_qualite, s_lib_role_compl, d_individu_id, d_these_id, d_role_id, d_acteur_etablissement_id, d_qualite, d_lib_role_compl) AS with diff as (
        SELECT 
            coalesce(s.SOURCE_CODE, d.SOURCE_CODE) SOURCE_CODE,
            coalesce(s.source_id, d.source_id) source_id,

            case
            when(s.SOURCE_CODE IS NOT NULL AND d.SOURCE_CODE IS NULL) then 'insert'
            when(s.SOURCE_CODE IS NOT NULL AND d.SOURCE_CODE IS NOT NULL and (d.HISTO_DESTRUCTION IS NULL or d.HISTO_DESTRUCTION > LOCALTIMESTAMP)) then 'update'
            when(s.SOURCE_CODE IS NOT NULL AND d.SOURCE_CODE IS NOT NULL and (d.HISTO_DESTRUCTION IS NOT NULL and d.HISTO_DESTRUCTION <= LOCALTIMESTAMP)) then 'undelete'
            when(s.SOURCE_CODE IS NULL AND d.SOURCE_CODE IS NOT NULL and (d.HISTO_DESTRUCTION IS NULL or d.HISTO_DESTRUCTION > LOCALTIMESTAMP)) then 'delete' end as operation,

            CASE WHEN d.INDIVIDU_ID <> s.INDIVIDU_ID OR (d.INDIVIDU_ID IS NULL AND s.INDIVIDU_ID IS NOT NULL) OR (d.INDIVIDU_ID IS NOT NULL AND s.INDIVIDU_ID IS NULL) THEN 1 ELSE 0 END as U_INDIVIDU_ID,
    CASE WHEN d.THESE_ID <> s.THESE_ID OR (d.THESE_ID IS NULL AND s.THESE_ID IS NOT NULL) OR (d.THESE_ID IS NOT NULL AND s.THESE_ID IS NULL) THEN 1 ELSE 0 END as U_THESE_ID,
    CASE WHEN d.ROLE_ID <> s.ROLE_ID OR (d.ROLE_ID IS NULL AND s.ROLE_ID IS NOT NULL) OR (d.ROLE_ID IS NOT NULL AND s.ROLE_ID IS NULL) THEN 1 ELSE 0 END as U_ROLE_ID,
    CASE WHEN d.ACTEUR_ETABLISSEMENT_ID <> s.ACTEUR_ETABLISSEMENT_ID OR (d.ACTEUR_ETABLISSEMENT_ID IS NULL AND s.ACTEUR_ETABLISSEMENT_ID IS NOT NULL) OR (d.ACTEUR_ETABLISSEMENT_ID IS NOT NULL AND s.ACTEUR_ETABLISSEMENT_ID IS NULL) THEN 1 ELSE 0 END as U_ACTEUR_ETABLISSEMENT_ID,
    CASE WHEN d.QUALITE <> s.QUALITE OR (d.QUALITE IS NULL AND s.QUALITE IS NOT NULL) OR (d.QUALITE IS NOT NULL AND s.QUALITE IS NULL) THEN 1 ELSE 0 END as U_QUALITE,
    CASE WHEN d.LIB_ROLE_COMPL <> s.LIB_ROLE_COMPL OR (d.LIB_ROLE_COMPL IS NULL AND s.LIB_ROLE_COMPL IS NOT NULL) OR (d.LIB_ROLE_COMPL IS NOT NULL AND s.LIB_ROLE_COMPL IS NULL) THEN 1 ELSE 0 END as U_LIB_ROLE_COMPL,

            s.INDIVIDU_ID AS S_INDIVIDU_ID,
    s.THESE_ID AS S_THESE_ID,
    s.ROLE_ID AS S_ROLE_ID,
    s.ACTEUR_ETABLISSEMENT_ID AS S_ACTEUR_ETABLISSEMENT_ID,
    s.QUALITE AS S_QUALITE,
    s.LIB_ROLE_COMPL AS S_LIB_ROLE_COMPL,

            d.INDIVIDU_ID AS D_INDIVIDU_ID,
    d.THESE_ID AS D_THESE_ID,
    d.ROLE_ID AS D_ROLE_ID,
    d.ACTEUR_ETABLISSEMENT_ID AS D_ACTEUR_ETABLISSEMENT_ID,
    d.QUALITE AS D_QUALITE,
    d.LIB_ROLE_COMPL AS D_LIB_ROLE_COMPL

         FROM ACTEUR d
        JOIN source src ON src.id = d.source_id AND src.importable = 1
        FULL OUTER JOIN SRC_ACTEUR s ON s.source_id = d.source_id AND s.SOURCE_CODE = d.SOURCE_CODE
    )
    select SOURCE_CODE,SOURCE_ID,OPERATION,U_INDIVIDU_ID,U_THESE_ID,U_ROLE_ID,U_ACTEUR_ETABLISSEMENT_ID,U_QUALITE,U_LIB_ROLE_COMPL,S_INDIVIDU_ID,S_THESE_ID,S_ROLE_ID,S_ACTEUR_ETABLISSEMENT_ID,S_QUALITE,S_LIB_ROLE_COMPL,D_INDIVIDU_ID,D_THESE_ID,D_ROLE_ID,D_ACTEUR_ETABLISSEMENT_ID,D_QUALITE,D_LIB_ROLE_COMPL from diff
    where operation is not null
    and (operation = 'undelete' or 0 < U_INDIVIDU_ID+U_THESE_ID+U_ROLE_ID+U_ACTEUR_ETABLISSEMENT_ID+U_QUALITE+U_LIB_ROLE_COMPL);

